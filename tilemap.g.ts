// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level0":
            case "level2":return tiles.createTilemap(hex``, img`
22222222222222222222222222222222
222222222............22222222222
222222222............22222222222
222222222.....2222...22222222222
222222222.......22...22222222222
22222222222.....22...22......222
2222222222222...22...22......222
2.............2222...........222
2.............2222.......22....2
2...........222222.......22....2
2...........222222222..2222....2
222222222222222222222222222....2
222222222222222222222222222..222
2....................22......222
2.................22.22.22...222
2.2..2..2.222222..22....22.....2
2.2.22.22222222222222222222222.2
2.2.22.22222222222222222222222.2
2.2..2.22222222222222222222222.2
2.22.2...........22222222222...2
2..2.22222222222.2222222222....2
22.2...........2.222222222.....2
22.22222222222.2.2222222.....222
22...........2.2.222222......222
2222.....222.2.2.22222....2..222
222222222222.2.2.2222........222
222222222222.2.2.2222........222
22......................2....222
22...........................222
22...............2222.......2222
22....2...2......222222222222222
22..2222222222222222222222222222
22..2222222222222222222222222222
22..2222222222222222222222222222
22.....2...2...2......2222222222
22....................2222222222
22...2...2...2........2222222222
22222222222222222222..2222222222
22....................2222222222
22....................2222222222
22..2222..22222..22222222222222.
22..2222222222222222222.........
222.22222222222222222...........
222..........................222
222..........................222
222...2..22..........22222222222
222...22.22..........22222222222
2222222222222222...2222222222222
`, [myTiles.transparency16,myTiles.tile1,sprites.builtin.forestTiles10,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile5], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile1":return tile1;
            case "tile2":return tile2;
            case "tile3":return tile3;
            case "tile4":return tile4;
            case "myTile":
            case "tile5":return tile5;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
